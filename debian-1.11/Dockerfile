#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "apply-templates.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

FROM debian:bookworm-slim AS latest
LABEL maintainer="hi@billgo.me"

RUN set -eux; \
  apt-get update; \
  apt-get install -y --no-install-recommends \
  ca-certificates \
  # ERROR: no download agent available; install curl, wget, or fetch
  curl \
  ; \
  rm -rf /var/lib/apt/lists/*

ENV JULIA_PATH=/usr/local/julia
ENV PATH=$JULIA_PATH/bin:$PATH

# https://julialang.org/juliareleases.asc
# Julia (Binary signing key) <buildbot@julialang.org>
ENV JULIA_GPG=3673DF529D9049477F76B37566E3C7DC03D6E495

# https://julialang.org/downloads/
ENV JULIA_VERSION=1.11.6

RUN set -eux; \
  \
  savedAptMark="$(apt-mark showmanual)"; \
  apt-get update; \
  apt-get install -y --no-install-recommends \
  gnupg \
  ; \
  rm -rf /var/lib/apt/lists/*; \
  \
  # https://julialang.org/downloads/#julia-command-line-version
  # https://julialang-s3.julialang.org/bin/checksums/julia-1.11.6.sha256
  arch="$(dpkg --print-architecture)"; \
  case "$arch" in \
  'amd64') \
  url='https://julialang-s3.julialang.org/bin/linux/x64/1.11/julia-1.11.6-linux-x86_64.tar.gz'; \
  sha256='e99e52e2029d845097c68f2372d836186f0eb3fb897a9dde0bdf9ee9250d03d5'; \
  ;; \
  'arm64') \
  url='https://julialang-s3.julialang.org/bin/linux/aarch64/1.11/julia-1.11.6-linux-aarch64.tar.gz'; \
  sha256='c2c5cdce017cacadaccb7d22aa070f549e4e87c4bb10f15853170ddcb50bf5f4'; \
  ;; \
  'i386') \
  url='https://julialang-s3.julialang.org/bin/linux/x86/1.11/julia-1.11.6-linux-i686.tar.gz'; \
  sha256='910fa8fd8a2e7dbf44b96ac3207e2b50744661215d10d4828f9df1bb5606d69c'; \
  ;; \
  'ppc64el') \
  url='https://julialang-s3.julialang.org/bin/linux/ppc64le/1.11/julia-1.11.6-linux-ppc64le.tar.gz'; \
  sha256='2fe08eb776b6eb76e7f75cab2ba09befc45ff2d69a88d062aae10a9d8fe99c11'; \
  ;; \
  *) \
  echo >&2 "error: current architecture ($arch) does not have a corresponding Julia binary release"; \
  exit 1; \
  ;; \
  esac; \
  \
  curl -fL -o julia.tar.gz.asc "$url.asc"; \
  curl -fL -o julia.tar.gz "$url"; \
  \
  echo "$sha256 *julia.tar.gz" | sha256sum --strict --check -; \
  \
  export GNUPGHOME="$(mktemp -d)"; \
  gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$JULIA_GPG"; \
  gpg --batch --verify julia.tar.gz.asc julia.tar.gz; \
  gpgconf --kill all; \
  rm -rf "$GNUPGHOME" julia.tar.gz.asc; \
  \
  mkdir "$JULIA_PATH"; \
  tar -xzf julia.tar.gz -C "$JULIA_PATH" --strip-components 1; \
  rm julia.tar.gz; \
  \
  apt-mark auto '.*' > /dev/null; \
  [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
  \
  # smoke test
  julia --version

COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["julia"]

### builder ###

FROM latest AS builder
LABEL maintainer="hi@billgo.me"
RUN apt-get update && apt-get install -y make gcc g++
COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]

CMD [ "node" ]
